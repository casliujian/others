test.model
import Dummy
Function test s:int :(int)->(int)=
if (s:int<7:int):bool then ((s:int+1:int):int) else (1:int):int
Var z:int=4:int
datatype t2=int
Var y:int=20:int
datatype day=Monday | Tuesday | Wednesday | Thursday | Friday | Saturday | Sunday
Function is_sunday d:day  :(day )->(bool)=
(d:day =Sunday:day ):bool
Val x:int=10:int
datatype t3={x:int;y:bool;}
Function day_of_z z:int :(int)->(day )=
match z:int with
| 1:int -> Monday:day 
| 2:int -> Tuesday:day 
| 3:int -> Wednesday:day 
| 4:int -> Thursday:day 
| 5:int -> Friday:day 
| 6:int -> Saturday:day 
| _:int -> Sunday:day 

:day 
transition s:int=
if (s:int<7:int):bool then ((s:int+1:int):int) else (1:int):int
property dummy=is_sunday day_of_z 1:int:day 
property reach_sunday=AF (x,is_sunday day_of_z x:int:day ,1:int)
